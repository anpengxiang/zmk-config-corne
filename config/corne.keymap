/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define BT 1
#define SYMBOLS 2
#define WASD 3
#define FGC 4

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
	macros {
		ZMK_MACRO(spotlight_macro,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>;
		)

		ZMK_MACRO(emdash_macro,
			wait-ms = <30>;
			tap-ms = <40>;
			bindings = <&macro_press &kp LCTRL>
								, <&macro_press &kp LALT>
                , <&macro_tap &kp MINUS>
								, <&macro_release &kp LALT>
                , <&macro_release &kp LCTRL>;
		)   
	};
	
	combos {
		compatible = "zmk,combos";
			combo_esc {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_tilde {
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&kp TILDE>;
		};
		combo_hyphen {
			timeout-ms = <50>;
			key-positions = <18 19>;
			bindings = <&kp MINUS>;
		};
		combo_emdash {
			timeout-ms = <50>;
			key-positions = <18	19 20>;
			bindings = <&emdash_macro>;
		};
		combo_underscore {
			timeout-ms = <50>;
			key-positions = <30 31>;
			bindings = <&kp UNDER>;
		};
		combo_paren_open {
			timeout-ms = <50>;
			key-positions = <8 9>;
			bindings = <&kp LPAR>;
		};
		combo_paren_close {
			timeout-ms = <50>;
			key-positions = <8 9 10>;
			bindings = <&kp RPAR>;
		};		
		combo_squarebracket_open {
			timeout-ms = <50>;
			key-positions = <20 21>;
			bindings = <&kp LBRT>;
		};
		combo_squarebracket_close {
			timeout-ms = <50>;
			key-positions = <20 21 22>;
			bindings = <&kp RBRT>;
		};
		combo_curlybracket_open {
			timeout-ms = <50>;
			key-positions = <32 33>;
			bindings = <&kp LBRC>;
		};
		combo_curlybracket_close {
			timeout-ms = <50>;
			key-positions = <32 33 34>;
			bindings = <&kp RBRC>;
		};		
		combo_backtick {
			timeout-ms = <50>;
			key-positions = <24 25>;
			bindings = <&kp GRAVE>;
		};
		combo_spotlight {
			timeout-ms = <50>;
			key-positions = <38 39>;
			bindings = <&spotlight_macro>;
		};
		combo_fgc {
			timeout-ms = <50>;
			key-positions = <36 37 38>;
			bindings = <&tog FGC>;		
		};
		combo_bt {
			timeout-ms = <50>;
			key-positions = <1 2 3 4>;
			bindings = <&sl BT>;		
		};	};

	behaviors {
		ctrl_caps: ctrl_caps {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LCTRL>, <&kp CAPS>;
		};

		 as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	};
	
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
			display-name = "Base";
			bindings = <
   &kp TAB   AS(Q) AS(W) AS(E) AS(R) AS(T)   AS(Y) AS(U)  AS(I)     AS(O)   AS(P)    &kp BSPC
   &ctrl_caps AS(A) AS(S) AS(D) AS(F) AS(G)   AS(H) AS(J)  AS(K)     AS(L)   &kp SEMI &kp SQT
   &kp LSHFT AS(Z) AS(X) AS(C) AS(V) AS(B)   AS(N) AS(M)  &kp COMMA &kp DOT &kp FSLH &kp ESC
		  &sl BT &lt WASD SPACE &mt LGUI BSPC   &mt LCTRL RET &lt SYMBOLS TAB &kp RALT
			>;
		};
		bt_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
			display-name = "Bluetooth";
			bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
			  		&trans     &trans       &trans      &trans  &lt SYMBOLS SPACE   &trans
			>;
		};

		sym_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
			display-name = "Symbols";
			bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
		    	     &trans &trans   &trans   &trans   &trans    &trans
			>;
		};
	wasd_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |  W  |     |     |     |   |  ,  |  7  |  8  |  9  |  /  |     |
// | CTRL |  A  |  S  |  D  |     |     |   |  -  |  4  |  5  |  6  |  *  |      |
// | SHFT |     |     |     |     |     |   |  .  |  1 |  2  |  3  |  +  |      |
//                    |     |     |     |   |     |     |    |
			display-name = "WASD and Numpad";
			bindings = <
   &trans &trans &trans &kp UP &trans &trans   &kp COMMA &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_DIVIDE &trans
&trans &trans &kp LEFT  &kp DOWN &kp RIGHT   &trans     &kp MINUS &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_MULTIPLY &trans
   &trans &trans   &trans &trans   &trans   &trans      &kp DOT &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp PLUS &trans
		    	     &trans &trans   &trans   &trans   &trans    &kp KP_N0
			>;
		};

		fgc_layer {
			display-name = "FGC";
			bindings = < 
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans   
&trans &trans &kp LEFT &kp DOWN &kp RIGHT &trans    &trans &trans &trans &trans &trans &trans   
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans   
		    	     &trans &trans   &kp UP   &kp UP   &trans    &kp KP_N0
			>;
		};
	};
};