/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define BT 1
#define SYMBOLS 2
#define WASD 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &lt BT BT &lt WASD BSPC &mt LGUI SPACE   &kp RET &lt SYMBOLS SYMBOLS &kp RALT
                        >;
                };
                bt_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        display-name = "Bluetooth";
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | &rtans; |     | SPC |   | ENT |     | ALT |
                        display-name = "Symbols";
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
        wasd_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |  W  |     |     |     |   |  -  |  7  |  8  |  9  |  /  |     |
// | CTRL |  A  |  S  |  D  |     |     |   |  ,  |  4  |  5  |  6  |  *  |      |
// | SHFT |     |     |     |     |     |   |  .  |  1 |  2  |  3  |  +  |      |
//                    |     |     |     |   |     |     |    |
                        display-name = "WASD and Numpad";
                        bindings = <
   &trans &trans &kp UP &trans &trans &trans   &kp MINUS &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_DIVIDE &trans
&trans &kp LEFT  &kp DOWN &kp RIGHT &trans   &trans     &kp COMMA &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_MULTIPLY &trans
   &trans &trans   &trans &trans   &trans   &trans      &kp DOT &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp PLUS &trans
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
        };
    };

        macros {
                ZMK_MACRO(spotlight_macro,
                        wait-ms = <30>;
                        tap-ms = <40>;
                        bindings = <&kp LGUI &kp SPACE>;
                )
        };

        combos {
                compatible = "zmk,combos";
                        combo_esc {
                        timeout-ms = <50>;
                        key-positions = <0 1>;
                        bindings = <&kp ESC>;
                };
                combo_tilde {
                        timeout-ms = <50>;
                        key-positions = <12 13>;
                        bindings = <&kp ESC>;
                };
                combo_spotlight {
                        timeout-ms = <50>;
                        key-positions = <38 39>;
                        bindings = <&spotlight_macro>;
                };
        };

        behaviors {
        ctrl_caps: ctrl_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp CTRL>, <&CAPS>, <&caps_word>;
        };

};